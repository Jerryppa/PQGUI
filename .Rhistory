IcatName <- rep(NA,Nd_list[[i]])
for (j in 1:Nd_list[[i]]){
IcatName[j] = paste("Icat","[",j,"]",sep="")
}
Icat_raw = res_nplcm[,IcatName]
pEti_raw = res_nplcm[,SubVarName]
} else {
N_grp=bugs.dat_list[[i]]$N_grp
grp_info=model_options_list[[i]]$grp_info
#Jfull[[i]]=length(grep("pEti",colnames(res_nplcm)))/N_grp
#WF
VarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
VarName[j] = paste("pEti","[",j,"]",sep="")
}
pEti_raw=matrix(0,dim(res_nplcm)[1],Jfull[[i]])
colnames(pEti_raw)=VarName
for (j in 1:Jfull[[i]]){
for (l in 1:dim(grp_info)[1]){
k=grp_info$Var1[l]
tmpname = paste("pEti","[",k,",",j,"]",sep="")
pEti_raw[,j]=pEti_raw[,j]+res_nplcm[,tmpname]*grp_info$Freq[grp_info$Var1==k]/Nd_list[[i]]
}
}
}
#get etiology fraction MCMC samples:
pEti_mat[[i]]   <- pEti_raw
pEti_mean[[i]]  <- colMeans(pEti_mat[[i]])
pEti_mean0[[i]] <- pEti_mean[[i]]
pathogen_names[[i]] <- model_options_list[[i]]$cause_list
#         order_tmp <- rep(NA,length(pathogen_names[[i]]))
#
#         incre <- 0
#         for (j in seq_along(display_order)){
#           if (display_order[j]%in% pathogen_names[[i]]){
#             incre <- incre + 1
#             order_tmp[incre] <- which(pathogen_names[[i]]==display_order[j])
#           }
#         }
#         order_list[[i]] <- order_tmp
pathogen_names_union <- union(pathogen_names_union,pathogen_names[[i]])
}
library(coda)
pathogen_displayorder_lookup <- read.csv(DIR_pathogen_displayorder_lookup)
f <- pathogen_displayorder_lookup$Pathogen
display_order <- as.character(levels(f))[f]
## read in data from result directories:
bugs.dat_list <- list()
model_options_list <- list()
pathogen_list <- list()
pick_list     <- list()
Jfull_BrS     <- list()
Jfull         <- list()
pEti_mat   <- list()
pEti_mean  <- list()
pEti_mean0 <- list()
pathogen_names<- list()
Nd_list <- list()#WF for sample size label
pathogen_names_union <- "INITIAL"
for (i in seq_along(DIR_list)){
bugs.dat <- dget(paste(DIR_list[[i]],"data.txt",sep="/"))
for (bugs.variable.name in names(bugs.dat)) {
if (!is.null(dim(bugs.dat[[bugs.variable.name]]))) {
dim(bugs.dat[[bugs.variable.name]]) <- rev(dim(bugs.dat[[bugs.variable.name]]))
bugs.dat[[bugs.variable.name]] <- aperm(bugs.dat[[bugs.variable.name]])
}
assign(bugs.variable.name, bugs.dat[[bugs.variable.name]])
}
bugs.dat_list[[i]] <- bugs.dat
rm("bugs.dat")
model_options_list[[i]]  <- dget(paste(DIR_list[[i]],"model_options.txt",sep="/"))
#WF
pathogen_list[[i]]     <- model_options_list[[i]]$cause_list
Jfull[[i]]        <- length(pathogen_list[[i]])
#reading nplcm outputs:
res_nplcm <- read.coda(paste(DIR_list[[i]],"coda1.txt",sep="/"),
paste(DIR_list[[i]],"codaIndex.txt",sep="/"),
quiet=TRUE)
Nd_list[[i]] = bugs.dat_list[[i]]$Nd
#WF
if (is.null(model_options_list[[i]]$X_reg_FPR)){
#Jfull[[i]] <- length(grep("pEti",colnames(res_nplcm)))
# extract and process some data and posterior samples:
SubVarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
SubVarName[j] = paste("pEti","[",j,"]",sep="")
}
IcatName <- rep(NA,Nd_list[[i]])
for (j in 1:Nd_list[[i]]){
IcatName[j] = paste("Icat","[",j,"]",sep="")
}
Icat_raw = res_nplcm[,IcatName]
pEti_raw = res_nplcm[,SubVarName]
} else {
N_grp=bugs.dat_list[[i]]$N_grp
grp_info=model_options_list[[i]]$grp_info
#Jfull[[i]]=length(grep("pEti",colnames(res_nplcm)))/N_grp
#WF
VarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
VarName[j] = paste("pEti","[",j,"]",sep="")
}
pEti_raw=matrix(0,dim(res_nplcm)[1],Jfull[[i]])
colnames(pEti_raw)=VarName
for (j in 1:Jfull[[i]]){
for (l in 1:dim(grp_info)[1]){
k=grp_info$Var1[l]
tmpname = paste("pEti","[",k,",",j,"]",sep="")
pEti_raw[,j]=pEti_raw[,j]+res_nplcm[,tmpname]*grp_info$Freq[grp_info$Var1==k]/Nd_list[[i]]
}
}
}
#get etiology fraction MCMC samples:
pEti_mat[[i]]   <- pEti_raw
pEti_mean[[i]]  <- colMeans(pEti_mat[[i]])
pEti_mean0[[i]] <- pEti_mean[[i]]
pathogen_names[[i]] <- model_options_list[[i]]$cause_list
#         order_tmp <- rep(NA,length(pathogen_names[[i]]))
#
#         incre <- 0
#         for (j in seq_along(display_order)){
#           if (display_order[j]%in% pathogen_names[[i]]){
#             incre <- incre + 1
#             order_tmp[incre] <- which(pathogen_names[[i]]==display_order[j])
#           }
#         }
#         order_list[[i]] <- order_tmp
pathogen_names_union <- union(pathogen_names_union,pathogen_names[[i]])
}
Icat_table <- apply(Icat_raw,2,function(x) as.matrix(table(x)))
Merged <- Reduce(function(...) merge(...,by="row.names",all=T),Icat_table,Icat_table[[1]])
warnings()
merge(Icat_table[[1]],Icat_table[[2]],by="row.names",all=T)
?do.call
Icatmerge <- function(...) merge(...,by="row.names",all=T)
do.call("complex", list(imag = 1:3))
do.call(paste, list(as.name("A"), as.name("B")), quote = TRUE)
Merged <- do.call(merge,Icat_table,by="row.names",all=T)
Merged <- do.call(Icatmerge,Icat_table)
Merged <- do.call(merge,Icat_table)
Icat_table <- apply(Icat_raw,2,function(x) as.data.frame(table(x)))
Merged <- do.call(merge,Icat_table)
Icat_table <- apply(Icat_raw,2,function(x) {
as.data.frame(table(x),stringsAsFactors = F)
})
Merged <- do.call(merge,Icat_table)
Merged <- do.call(merge,Icat_table,by="x")
merge(Icat_table[[1]],Icat_table[[2]])
merge(Icat_table[[1]],Icat_table[[2]],all=T)
Merged <- do.call(merge,Icat_table,all=T)
Merged <- do.call(merge,list(Icat_table,all=T))
Merged <- do.call(Icatmerge,Icat_table)
merge(Icat_table[[1]],Icat_table[[2]],all=T)
merge(Icat_table[[1]],Icat_table[[2]],by="row.names",all=T)
Merged <- Reduce(function(...) {
merge(...,by="x",all=T)
},Icat_table,Icat_table[[1]])
View(Merged)
merge(Icat_table[[1]],Icat_table[[1]],by="x",all=T)
temp <- merge(Icat_table[[1]],Icat_table[[1]],by="x",all=T)
temp2 <- merge(temp,Icat_table[[2]],by="x",all=T)
temp2
warnings()
Merged <- Reduce(function(...) {
merge(...,by="x",all=T)
},Icat_table)
View(Merged)
Icat_table[[1]]
Icat_table[[2]]
View(Merged)
Merged.mat <- t(as.matrix(Merged))
Merged.mat <- t(as.matrix(Merged[,-1]))
Merged.mat <- t(as.matrix(Merged[,-1]))
col.names(Merged.mat) <- Merged[,1]
colnames(Merged.mat) <- Merged[,1]
rownames(Merged.mat) <- 1:nrow(Merged.mat)
View(Merged.mat)
IcatToIEti <- function(Icat_raw) {
Icat_table <- apply(Icat_raw,2,function(x) {
as.data.frame(table(x),stringsAsFactors = F)
})
Merged <- Reduce(function(...) {
merge(...,by="x",all=T)
},Icat_table)
Merged.mat <- t(as.matrix(Merged[,-1]))
colnames(Merged.mat) <- Merged[,1]
rownames(Merged.mat) <- 1:nrow(Merged.mat)
}
Icat_mat <- IcatToIEti(Icat_raw)
IcatToIEti <- function(Icat_raw) {
Icat_table <- apply(Icat_raw,2,function(x) {
as.data.frame(table(x),stringsAsFactors = F)
})
Merged <- Reduce(function(...) {
merge(...,by="x",all=T)
},Icat_table)
Merged.mat <- t(as.matrix(Merged[,-1]))
colnames(Merged.mat) <- Merged[,1]
rownames(Merged.mat) <- 1:nrow(Merged.mat)
return(Merged.mat)
}
Icat_mat <- IcatToIEti(Icat_raw)
View(Icat_mat)
pathogen_list[[i]][colnames(Icat_mat)]
colnames(Icat_mat)
pathogen_list[[i]][as.numeric(colnames(Icat_mat))]
pathogen_list[[i]]
pEti_mean
PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
shiny::runApp()
dev.off()
shiny::runApp()
dev.off()
shiny::runApp()
DIR_list<-"C:/PQGUI/PQGUI_Str_H1A1C12345_Adj__Mod_E1B1S1C1"
DIR_pathogen_displayorder_lookup<-"data/pathogen_displayorder_lookup.csv"
PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv"))
PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
pathogen_displayorder_lookup <- read.csv(DIR_pathogen_displayorder_lookup)
f <- pathogen_displayorder_lookup$Pathogen
display_order <- as.character(levels(f))[f]
## read in data from result directories:
bugs.dat_list <- list()
model_options_list <- list()
mcmc_options_list <- list()
pathogen_list <- list()
pick_list     <- list()
Jfull_BrS     <- list()
Jfull         <- list()
pEti_mat   <- list()
pEti_mean  <- list()
pEti_mean0 <- list()
pathogen_names<- list()
Nd_list <- list()#WF for sample size label
pathogen_names_union <- "INITIAL"
for (i in seq_along(DIR_list)){
bugs.dat <- dget(paste(DIR_list[[i]],"data.txt",sep="/"))
for (bugs.variable.name in names(bugs.dat)) {
if (!is.null(dim(bugs.dat[[bugs.variable.name]]))) {
dim(bugs.dat[[bugs.variable.name]]) <- rev(dim(bugs.dat[[bugs.variable.name]]))
bugs.dat[[bugs.variable.name]] <- aperm(bugs.dat[[bugs.variable.name]])
}
assign(bugs.variable.name, bugs.dat[[bugs.variable.name]])
}
bugs.dat_list[[i]] <- bugs.dat
rm("bugs.dat")
model_options_list[[i]]  <- dget(paste(DIR_list[[i]],"model_options.txt",sep="/"))
mcmc_options_list[[i]]  <- dget(paste(DIR_list[[i]],"mcmc_options.txt",sep="/"))
result.folder <- mcmc_options_list[[i]][["result.folder"]]#WF
pathogen_list[[i]]     <- model_options_list[[i]]$cause_list
Jfull[[i]]        <- length(pathogen_list[[i]])
#reading nplcm outputs:
res_nplcm <- read.coda(paste(DIR_list[[i]],"coda1.txt",sep="/"),
paste(DIR_list[[i]],"codaIndex.txt",sep="/"),
quiet=TRUE)
Nd_list[[i]] = bugs.dat_list[[i]]$Nd
#WF
if (is.null(model_options_list[[i]]$X_reg_FPR)){
#Jfull[[i]] <- length(grep("pEti",colnames(res_nplcm)))
# extract and process some data and posterior samples:
SubVarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
SubVarName[j] = paste("pEti","[",j,"]",sep="")
}
IcatName <- rep(NA,Nd_list[[i]])
for (j in 1:Nd_list[[i]]){
IcatName[j] = paste("Icat","[",j,"]",sep="")
}
Icat_raw = res_nplcm[,IcatName]
pEti_raw = res_nplcm[,SubVarName]
} else {
N_grp=bugs.dat_list[[i]]$N_grp
grp_info=model_options_list[[i]]$grp_info
#Jfull[[i]]=length(grep("pEti",colnames(res_nplcm)))/N_grp
#WF
VarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
VarName[j] = paste("pEti","[",j,"]",sep="")
}
pEti_raw=matrix(0,dim(res_nplcm)[1],Jfull[[i]])
colnames(pEti_raw)=VarName
for (j in 1:Jfull[[i]]){
for (l in 1:dim(grp_info)[1]){
k=grp_info$Var1[l]
tmpname = paste("pEti","[",k,",",j,"]",sep="")
pEti_raw[,j]=pEti_raw[,j]+res_nplcm[,tmpname]*grp_info$Freq[grp_info$Var1==k]/Nd_list[[i]]
}
}
}
Icat_mat <- IcatToIEti(Icat_raw)
colnames(Icat_mat) <- pathogen_list[[i]][as.numeric(colnames(Icat_mat))]
#PQ_GUI_dataset <- read.csv(paste0(DIR_list[[i]],"/PQ_GUI.csv"))
PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_ind_prop<- merge(PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1),],
Icat_mat)
write.csv(PQ_GUI_ind_prop,paste0(DIR_list[[i]],"/PQ_GUI.csv"))
#get etiology fraction MCMC samples:
pEti_mat[[i]]   <- pEti_raw
pEti_mean[[i]]  <- colMeans(pEti_mat[[i]])
pEti_mean0[[i]] <- pEti_mean[[i]]
pathogen_names[[i]] <- model_options_list[[i]]$cause_list
#         order_tmp <- rep(NA,length(pathogen_names[[i]]))
#
#         incre <- 0
#         for (j in seq_along(display_order)){
#           if (display_order[j]%in% pathogen_names[[i]]){
#             incre <- incre + 1
#             order_tmp[incre] <- which(pathogen_names[[i]]==display_order[j])
#           }
#         }
#         order_list[[i]] <- order_tmp
pathogen_names_union <- union(pathogen_names_union,pathogen_names[[i]])
}
IcatToIEti <- function(Icat_raw) {
Icat_table <- apply(Icat_raw,2,function(x) {
as.data.frame(table(x),stringsAsFactors = F)
})
Merged <- Reduce(function(...) {
merge(...,by="x",all=T)
},Icat_table)
Merged.mat <- t(as.matrix(Merged[,-1]))
colnames(Merged.mat) <- Merged[,1]
rownames(Merged.mat) <- 1:nrow(Merged.mat)
return(Merged.mat)
}
pathogen_displayorder_lookup <- read.csv(DIR_pathogen_displayorder_lookup)
f <- pathogen_displayorder_lookup$Pathogen
display_order <- as.character(levels(f))[f]
## read in data from result directories:
bugs.dat_list <- list()
model_options_list <- list()
mcmc_options_list <- list()
pathogen_list <- list()
pick_list     <- list()
Jfull_BrS     <- list()
Jfull         <- list()
pEti_mat   <- list()
pEti_mean  <- list()
pEti_mean0 <- list()
pathogen_names<- list()
Nd_list <- list()#WF for sample size label
pathogen_names_union <- "INITIAL"
for (i in seq_along(DIR_list)){
bugs.dat <- dget(paste(DIR_list[[i]],"data.txt",sep="/"))
for (bugs.variable.name in names(bugs.dat)) {
if (!is.null(dim(bugs.dat[[bugs.variable.name]]))) {
dim(bugs.dat[[bugs.variable.name]]) <- rev(dim(bugs.dat[[bugs.variable.name]]))
bugs.dat[[bugs.variable.name]] <- aperm(bugs.dat[[bugs.variable.name]])
}
assign(bugs.variable.name, bugs.dat[[bugs.variable.name]])
}
bugs.dat_list[[i]] <- bugs.dat
rm("bugs.dat")
model_options_list[[i]]  <- dget(paste(DIR_list[[i]],"model_options.txt",sep="/"))
mcmc_options_list[[i]]  <- dget(paste(DIR_list[[i]],"mcmc_options.txt",sep="/"))
result.folder <- mcmc_options_list[[i]][["result.folder"]]#WF
pathogen_list[[i]]     <- model_options_list[[i]]$cause_list
Jfull[[i]]        <- length(pathogen_list[[i]])
#reading nplcm outputs:
res_nplcm <- read.coda(paste(DIR_list[[i]],"coda1.txt",sep="/"),
paste(DIR_list[[i]],"codaIndex.txt",sep="/"),
quiet=TRUE)
Nd_list[[i]] = bugs.dat_list[[i]]$Nd
#WF
if (is.null(model_options_list[[i]]$X_reg_FPR)){
#Jfull[[i]] <- length(grep("pEti",colnames(res_nplcm)))
# extract and process some data and posterior samples:
SubVarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
SubVarName[j] = paste("pEti","[",j,"]",sep="")
}
IcatName <- rep(NA,Nd_list[[i]])
for (j in 1:Nd_list[[i]]){
IcatName[j] = paste("Icat","[",j,"]",sep="")
}
Icat_raw = res_nplcm[,IcatName]
pEti_raw = res_nplcm[,SubVarName]
} else {
N_grp=bugs.dat_list[[i]]$N_grp
grp_info=model_options_list[[i]]$grp_info
#Jfull[[i]]=length(grep("pEti",colnames(res_nplcm)))/N_grp
#WF
VarName <- rep(NA,Jfull[[i]])
for (j in 1:Jfull[[i]]){
VarName[j] = paste("pEti","[",j,"]",sep="")
}
pEti_raw=matrix(0,dim(res_nplcm)[1],Jfull[[i]])
colnames(pEti_raw)=VarName
for (j in 1:Jfull[[i]]){
for (l in 1:dim(grp_info)[1]){
k=grp_info$Var1[l]
tmpname = paste("pEti","[",k,",",j,"]",sep="")
pEti_raw[,j]=pEti_raw[,j]+res_nplcm[,tmpname]*grp_info$Freq[grp_info$Var1==k]/Nd_list[[i]]
}
}
}
Icat_mat <- IcatToIEti(Icat_raw)
colnames(Icat_mat) <- pathogen_list[[i]][as.numeric(colnames(Icat_mat))]
#PQ_GUI_dataset <- read.csv(paste0(DIR_list[[i]],"/PQ_GUI.csv"))
PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_ind_prop<- merge(PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1),],
Icat_mat)
write.csv(PQ_GUI_ind_prop,paste0(DIR_list[[i]],"/PQ_GUI.csv"))
#get etiology fraction MCMC samples:
pEti_mat[[i]]   <- pEti_raw
pEti_mean[[i]]  <- colMeans(pEti_mat[[i]])
pEti_mean0[[i]] <- pEti_mean[[i]]
pathogen_names[[i]] <- model_options_list[[i]]$cause_list
#         order_tmp <- rep(NA,length(pathogen_names[[i]]))
#
#         incre <- 0
#         for (j in seq_along(display_order)){
#           if (display_order[j]%in% pathogen_names[[i]]){
#             incre <- incre + 1
#             order_tmp[incre] <- which(pathogen_names[[i]]==display_order[j])
#           }
#         }
#         order_list[[i]] <- order_tmp
pathogen_names_union <- union(pathogen_names_union,pathogen_names[[i]])
}
data.temp <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1),]
data.temp <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1),]
which(PQ_GUI_dataset$PQGUI_CXR==1)
data.temp <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1&
PQ_GUI_dataset$PQGUI_HIV==1&
PQ_GUI_dataset$PQGUI_AGE==1&),]
data.temp <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),]
head(data.temp)
nrow(data.temp)
PQ_GUI_ind_prop<- merge(PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),],
Icat_mat)
write.csv(PQ_GUI_ind_prop,paste0(DIR_list[[i]],"/PQ_GUI.csv"))
View(Icat_mat)
#PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_subset <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1)
,]
View(PQ_GUI_subset)
View(PQ_GUI_subset)
PQ_GUI_subset <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),-c(1,2)]
PQ_GUI_ind_prop<- merge(PQ_GUI_subset,Icat_mat)
write.csv(PQ_GUI_ind_prop,paste0(DIR_list[[i]],"/PQ_GUI.csv"))
View(PQ_GUI_subset)
PQ_GUI_subset <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),-1][,-c("row.names")]
#PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_subset <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),-1][,-"row.names"]
View(PQ_GUI_subset)
row.names(PQ_GUI_subset)<- 1:nrow(PQ_GUI_subset)
View(PQ_GUI_subset)
PQ_GUI_ind_prop<- merge(PQ_GUI_subset,Icat_mat)
write.csv(PQ_GUI_ind_prop,paste0(DIR_list[[i]],"/PQ_GUI.csv"))
View(PQ_GUI_ind_prop)
PQ_GUI_ind_prop<- merge(PQ_GUI_subset,as.data.frame(Icat_mat))
rownames(Icat_mat) <- 1:nrow(Icat_mat)
row.names(PQ_GUI_subset)
rownames(Icat_mat)
PQ_GUI_ind_prop<- merge(PQ_GUI_subset,as.data.frame(Icat_mat),by="row.names")
write.csv(PQ_GUI_ind_prop,paste0(DIR_list[[i]],"/PQ_GUI.csv"))
shiny::runApp()
View(PQ_GUI_ind_prop)
Icat_mat <- IcatToIEti(Icat_raw)
colnames(Icat_mat) <- pathogen_list[[i]][as.numeric(colnames(Icat_mat))]
rownames(Icat_mat) <- 1:nrow(Icat_mat)
PQ_GUI_dataset <- read.csv(paste0(DIR_list[[i]],"/PQ_GUI.csv"))
#PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_subset <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),-1]
row.names(PQ_GUI_subset)<- 1:nrow(PQ_GUI_subset)
PQ_GUI_ind_prop<- merge(PQ_GUI_subset,as.data.frame(Icat_mat),by="row.names")
writ
Icat_mat <- IcatToIEti(Icat_raw)
colnames(Icat_mat) <- pathogen_list[[i]][as.numeric(colnames(Icat_mat))]
rownames(Icat_mat) <- 1:nrow(Icat_mat)
View(Icat_mat)
PQ_GUI_dataset <- read.csv(paste0(DIR_list[[i]],"/PQ_GUI.csv"))
#PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_dataset <- read.csv("data/PQ_SAF_14MAY15_GUI.csv")
PQ_GUI_subset <- PQ_GUI_dataset[which(PQ_GUI_dataset$PQGUI_CXR==1 &
PQ_GUI_dataset$PQGUI_HIV==1 &
PQ_GUI_dataset$PQGUI_AGE==1),-1]
row.names(PQ_GUI_subset)<- 1:nrow(PQ_GUI_subset)
PQ_GUI_ind_prop<- merge(PQ_GUI_subset,as.data.frame(Icat_mat),by="row.names")
View(PQ_GUI_ind_prop)
View(PQ_GUI_subset)
View(Icat_mat)
IcatToIEti <- function(Icat_raw) {
Icat_table <- apply(Icat_raw,2,function(x) {
as.data.frame(prop.table(table(x)),stringsAsFactors = F)
})
Merged <- Reduce(function(...) {
merge(...,by="x",all=T)
},Icat_table)
Merged.mat <- t(as.matrix(Merged[,-1]))
colnames(Merged.mat) <- Merged[,1]
rownames(Merged.mat) <- 1:nrow(Merged.mat)
return(Merged.mat)
}
Icat_mat <- IcatToIEti(Icat_raw)
View(Icat_mat)
shiny::runApp()
